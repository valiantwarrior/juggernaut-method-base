package kr.valor.juggernaut.data.session.mapper.delegate.routine.basic.amrap.realization

import kr.valor.juggernaut.data.session.mapper.delegate.property.DefaultPropertyMediateDelegate
import kr.valor.juggernaut.data.session.mapper.delegate.routine.`validate routines that were generated by delegate`
import kr.valor.juggernaut.data.session.mapper.delegate.routine.basic.PhaseEntireRoutineIntensityTable
import kr.valor.juggernaut.data.session.mapper.delegate.routine.basic.amrap.AMRAPRoutinesProviderDelegate
import org.junit.Before
import org.junit.Test

class RealizationRoutinesProviderDelegateTest {

    private lateinit var targetProviderDelegate: AMRAPRoutinesProviderDelegate
    private lateinit var table: PhaseEntireRoutineIntensityTable
    private val action = DefaultPropertyMediateDelegate::mediate

    @Before
    fun `init`() {
        targetProviderDelegate =
            RealizationRoutinesProviderDelegate(
                DefaultPropertyMediateDelegate
            )
        table = RealizationRoutinesProviderDelegate
            .routineIntensityMap
    }

    @Test
    fun `BasicRealizationRoutinesProviderDelegate generates routines as expected`() {
        targetProviderDelegate.`validate routines that were generated by delegate`(table, action)
    }
}